#summary advanced example: find and parse xing profiles via google

|| *NOTE*: This example is just thought to show how *dine* works, don't use it to crawle google.com, as it violates google's terms of use to do this! ||

 
== What do we wanna do ? ==

We wanna find people listed at the business contacts network _xing.com_ with their name and occupation.

== Let's go ==

=== Step 1: parsing a xing profile ===

At first we check a _xing_ profile page to see where the name and occupation are located in the HTML code.

 * the name is shown in the page title with "XING - " added to it, easy to parse for us:

{{{
var name = String( this.xmlObj..title ).replace(/XING - /, "");
}}}

 * the occupation is a little bit more difficult, it is located in the text of the first link ( _a_-tag ) in a _p_-tag with the _class_ attribute "profile-work-descr"

{{{
var occupation = this.xmlObj..p.(@className="profile-work-descr")..a[0];
}}}

So now we can write a step, that gets a profile url from another step and parses the profile page:

_xing/parseProfile.js_

{{{
createStep({
	getUrl: function() {
		return this.memory.url;
	},
	run: function() {		
			
			var name = String( this.xmlObj..title ).replace(/XING - /, "");
			var occupation = this.xmlObj..p.(@className="profile-work-descr")..a[0];
			
			print( name+" --- "+occupation );
	}
});
}}}

=== Step 2: finding profile pages ===

All _xing_ profile pages start with _http://www.xing.com/profile/_, so we can do a google search and check the result links for that. If we find one, we create a parsing step for that url.


_xing/findProfile.js_

{{{
createStep({
	getUrl: function() {
		return this.memory.url;
	},
	run: function() {		
		
		for each( var profileLink in this.xmlObj..a.(@className="l").@href )
			if ( profileLink.match(/^http:\/\/www.xing.com\/profile\//) )
				addStep( "xing/parseProfile", { url: profileLink } );
				
	}
});
}}}


=== Step 3: finding all profiles ===

|| *NOTE*: don't execute this code, it violates google's terms of use! It is intented as a learning example only! ||

We do a google search for "user profile site:xing.com profile", this will return a lot of profile sites. We'll extract the number of found pages from the first result site and use it to page through the results. For every result site found, we create a _findProfile_ step

_xing/pageProfile.js_

{{{
createStep({
	getUrl: function() {
		return getGoogleUrl();
	},
	run: function() {		

		var pageCount = this.xmlObj..table.(@className="t bt")[3]..td.(@align="right")..b[3];
		
		pageCount = (pageCount - pageCount%10) / 10;
					
		for ( var n = 0 ; n <= pageCount ; n++ )
			addStep("xing/findProfile", { url: getGoogleUrl()+"&start="+(n*10) });
				
	}
});

function getGoogleUrl() {
	return "http://www.google.de/search?hl=de&official&hs=YSE&q=user+profile++site%3Axing.com+profile&btnG=Suche&meta=";
}
}}}